{
	"Children Prop": {
		"body": "children${1:?}: React.ReactNode;",
		"prefix": [
			"cp",
			"children-prop"
		],
		"scope": "typescript,typescriptreact"
	},
	"Children Prop Destructure": {
		"body": "{ children }: { children${1:?}: React.ReactNode }",
		"prefix": [
			"cpd",
			"children-prop-destructure"
		],
		"scope": "typescriptreact"
	},
	"React - Arrow Component": {
		"body": "const ${1:${TM_FILENAME_BASE/(?:^|[\\s._-]+)([a-zA-Z0-9])(?=[a-zA-Z0-9]*)/${1:/upcase}/g}} = () => {\n\treturn <>$1$0</>;\n};\n$1.displayName = \"$1\";\n",
		"prefix": [
			"rac",
			"arrow-component"
		],
		"scope": "javascriptreact,typescriptreact"
	},
	"React - Arrow Component Export": {
		"body": "export const ${1:${TM_FILENAME_BASE/(?:^|[\\s._-]+)([a-zA-Z0-9])(?=[a-zA-Z0-9]*)/${1:/upcase}/g}} = () => {\n\treturn <>$1$0</>;\n};\n$1.displayName = \"$1\";\n",
		"prefix": [
			"race",
			"arrow-component-export"
		],
		"scope": "javascriptreact,typescriptreact"
	},
	"React - Arrow Component Export Default": {
		"body": "const ${1:${TM_FILENAME_BASE/(?:^|[\\s._-]+)([a-zA-Z0-9])(?=[a-zA-Z0-9]*)/${1:/upcase}/g}} = () => {\n\treturn <>$1$0</>;\n};\n$1.displayName = \"$1\";\n\nexport default $1;",
		"prefix": [
			"racd",
			"arrow-component-export-default"
		],
		"scope": "javascriptreact,typescriptreact"
	},
	"React - Arrow Component Export Default Props": {
		"body": "interface ${1:${TM_FILENAME_BASE/(?:^|[\\s._-]+)([a-zA-Z0-9])(?=[a-zA-Z0-9]*)/${1:/upcase}/g}}Props {\n\t$2\n}\n\nconst $1 = ({ $3 }: $1Props) => {\n\treturn <>$1$0</>;\n};\n$1.displayName = \"$1\";\n\nexport default $1;",
		"prefix": [
			"racdp",
			"arrow-component-export-default-props"
		],
		"scope": "typescriptreact"
	},
	"React - Arrow Component Export Props": {
		"body": "interface ${1:${TM_FILENAME_BASE/(?:^|[\\s._-]+)([a-zA-Z0-9])(?=[a-zA-Z0-9]*)/${1:/upcase}/g}}Props {\n\t$2\n}\n\nexport const $1 = ({ $3 }: $1Props) => {\n\treturn <>$1$0</>;\n};\n$1.displayName = \"$1\";\n",
		"prefix": [
			"racep",
			"arrow-component-export-props"
		],
		"scope": "typescriptreact"
	},
	"React - Arrow Component Props": {
		"body": "interface ${1:${TM_FILENAME_BASE/(?:^|[\\s._-]+)([a-zA-Z0-9])(?=[a-zA-Z0-9]*)/${1:/upcase}/g}}Props {\n\t$2\n}\n\nconst $1 = ({ $3 }: $1Props) => {\n\treturn <>$1$0</>;\n};\n$1.displayName = \"$1\";\n",
		"prefix": [
			"racp",
			"arrow-component-props"
		],
		"scope": "typescriptreact"
	},
	"React - Component": {
		"body": "function ${1:${TM_FILENAME_BASE/(?:^|[\\s._-]+)([a-zA-Z0-9])(?=[a-zA-Z0-9]*)/${1:/upcase}/g}}() {\n\treturn <>$1$0</>;\n}\n",
		"prefix": [
			"rc",
			"component"
		],
		"scope": "javascriptreact,typescriptreact"
	},
	"React - Component Export": {
		"body": "export function ${1:${TM_FILENAME_BASE/(?:^|[\\s._-]+)([a-zA-Z0-9])(?=[a-zA-Z0-9]*)/${1:/upcase}/g}}() {\n\treturn <>$1$0</>;\n}\n",
		"prefix": [
			"rce",
			"component-export"
		],
		"scope": "javascriptreact,typescriptreact"
	},
	"React - Component Export Default": {
		"body": "export default function ${1:${TM_FILENAME_BASE/(?:^|[\\s._-]+)([a-zA-Z0-9])(?=[a-zA-Z0-9]*)/${1:/upcase}/g}}() {\n\treturn <>$1$0</>;\n}\n",
		"prefix": [
			"rcd",
			"component-export-default"
		],
		"scope": "javascriptreact,typescriptreact"
	},
	"React - Component Export Default Props": {
		"body": "interface ${1:${TM_FILENAME_BASE/(?:^|[\\s._-]+)([a-zA-Z0-9])(?=[a-zA-Z0-9]*)/${1:/upcase}/g}}Props {\n\t$2\n}\n\nexport default function $1({ $3 }: $1Props) {\n\treturn <>$1$0</>;\n}\n",
		"prefix": [
			"rcdp",
			"component-export-default-props"
		],
		"scope": "typescriptreact"
	},
	"React - Component Export Props": {
		"body": "interface ${1:${TM_FILENAME_BASE/(?:^|[\\s._-]+)([a-zA-Z0-9])(?=[a-zA-Z0-9]*)/${1:/upcase}/g}}Props {\n\t$2\n}\n\nexport function $1({ $3 }: $1Props) {\n\treturn <>$1$0</>;\n}\n",
		"prefix": [
			"rcep",
			"component-export-props"
		],
		"scope": "typescriptreact"
	},
	"React - Component Props": {
		"body": "interface ${1:${TM_FILENAME_BASE/(?:^|[\\s._-]+)([a-zA-Z0-9])(?=[a-zA-Z0-9]*)/${1:/upcase}/g}}Props {\n\t$2\n}\n\nfunction $1({ $3 }: $1Props) {\n\treturn <>$1$0</>;\n}\n",
		"prefix": [
			"rcp",
			"component-props"
		],
		"scope": "typescriptreact"
	},
	"Use Effect": {
		"body": "useEffect(() => {\n\t$1\n}, [$2]);",
		"prefix": [
			"use-effect"
		],
		"scope": "javascript,javascriptreact,typescript,typescriptreact"
	},
	"Use Id": {
		"body": "const ${2:id} = useId($1);",
		"prefix": [
			"use-id"
		],
		"scope": "javascript,typescript,javascriptreact,typescriptreact"
	},
	"Use Ref": {
		"body": "const ${2:ref} = useRef($1);",
		"prefix": [
			"use-ref"
		],
		"scope": "javascript,typescript,javascriptreact,typescriptreact"
	},
	"Use State": {
		"body": "const [$2, set${2/(.*)/${1:/capitalize}/}] = useState($1);",
		"prefix": [
			"use-state"
		],
		"scope": "typescript,typescriptreact,javascript,javascriptreact"
	}
}
